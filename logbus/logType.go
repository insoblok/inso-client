package logbus

// LogType defines a custom type for different types of logs.
type LogType string

// Constants for different Log Types
const (
	TransactionLog      LogType = "Transaction Log"
	EventLog            LogType = "Event Log"
	TokenTransferLog    LogType = "Token Transfer Event"
	CustomContractEvent LogType = "Custom Contract Event"
	StateChangeLog      LogType = "Internal State Change"
	ErrorLog            LogType = "Error Log"
	InternalTransaction LogType = "Internal Transaction"
)

// LogTypeDetails provides a description of how each log type is generated
func LogTypeDetails(logType LogType) string {
	switch logType {
	case TransactionLog:
		return "Generated when a transaction is sent and included in a block. No ABI required."
	case EventLog:
		return "Generated when a contract emits an event via the `emit` keyword (e.g., `Transfer`, `Approval`). ABI required."
	case TokenTransferLog:
		return "Generated by ERC20/721 token events like transfers and approvals. ABI required."
	case CustomContractEvent:
		return "Generated by custom smart contract functions (e.g., `NewItemCreated(uint256 id, string name)`). ABI required."
	case StateChangeLog:
		return "Generated when a contract's internal state changes (e.g., status transitions like 'paused' to 'active'). ABI required."
	case ErrorLog:
		return "Generated when a transaction or contract call fails (e.g., revert or error message). No ABI required."
	case InternalTransaction:
		return "Generated when contracts make calls to other contracts or accounts. No ABI required, but tools needed to capture."
	default:
		return "Unknown log type."
	}
}
